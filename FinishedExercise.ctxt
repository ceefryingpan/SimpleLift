#BlueJ class context
comment0.target=FinishedExercise
comment0.text=\n\ The\ FinishedExercise\ class\ extends\ the\ Exercise\ class\ and\ adds\n\ a\ few\ more\ fields\ that\ are\ to\ be\ inputted\ after\ the\ user\ finishes\n\ the\ exercise,\ including\ sets,\ reps,\ weight,\ and\ a\ timestamp.\n\ \n\ @author\ Charles\ Pan\n\ @version\ March\ 2018\n
comment1.params=username\ ex\ sets\ reps\ weight\ timestamp
comment1.target=FinishedExercise(java.lang.String,\ Exercise,\ int,\ int[],\ int[],\ java.lang.String)
comment10.params=
comment10.target=int[]\ getReps()
comment11.params=
comment11.target=int[]\ getWeight()
comment12.params=
comment12.target=java.lang.String\ getTimeStamp()
comment13.params=
comment13.target=java.lang.String\ toString()
comment2.params=username\ name\ sets\ reps\ weight\ timestamp
comment2.target=FinishedExercise(java.lang.String,\ java.lang.String,\ int,\ int[],\ int[],\ java.lang.String)
comment2.text=\n\ This\ second\ constructor\ makes\ it\ easier\ for\ the\n\ FinishedExerciseModel\ class\ to\ read\ data\ from\ the\ .csv\ file,\n\ since\ the\ file\ does\ not\ store\ data\ such\ as\ muscles,\ difficulty,\n\ etc.\n
comment3.params=username
comment3.target=void\ setUsername(java.lang.String)
comment4.params=sets
comment4.target=void\ setSets(int)
comment5.params=reps
comment5.target=void\ setReps(int[])
comment6.params=weight
comment6.target=void\ setWeight(int[])
comment7.params=timestamp
comment7.target=void\ setTimeStamp(java.lang.String)
comment8.params=
comment8.target=java.lang.String\ getUsername()
comment9.params=
comment9.target=int\ getSets()
numComments=14
